---
kind: pipeline
name: TengineRV64
platform:
  os: linux
  arch: amd64 

steps:
  - name: build
    image: ubuntu20.04:qemu
    commands:
      - PATH=$PATH:/home/riscv/bin cmake -DCMAKE_TOOLCHAIN_FILE=toolchains/rv64-c906.toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=RELEASE -DTENGINE_BUILD_TESTS=ON -DTENGINE_COVERAGE=ON -B build
      - PATH=$PATH:/home/riscv/bin cmake --build build -- -j`cat /proc/cpuinfo | grep 'processor' | wc -l` VERBOSE=1 
  - name: test ops 
    image: ubuntu20.04:qemu
    commands:
      - cd build
      - export QEMU_CMD='qemu-riscv64 -cpu rv64,v=true -E TG_DEBUG_TIME=1 -L /home/riscv/sysroot'
      - ../tests/test_rv64_ops.sh
  - name: test models 
    image: ubuntu20.04:qemu
    environment:
      DATA_SERVER_URL:
        from_secret: DATA_SERVER_URL
    commands:
      - cd build
      - wget -nv $${DATA_SERVER_URL}/tengine_model_zoo/ci_data/models.tar.gz
      - wget -nv $${DATA_SERVER_URL}/tengine_model_zoo/ci_data/images.tar.gz
      - wget -nv $${DATA_SERVER_URL}/tengine_model_zoo/ci_data/data_x86.tar.gz
      - mkdir models images data
      - tar zxvf models.tar.gz -C models
      - tar zxvf images.tar.gz -C images
      - tar zxvf data_x86.tar.gz -C data
      - export QEMU_CMD='qemu-riscv64 -cpu rv64,v=true -E TG_DEBUG_TIME=1 -L /home/riscv/sysroot'
      - ../tests/test_rv64_models.sh
    when:
      branch:
      - master
  - name: code coverage 
    image: ubuntu20.04:qemu
    commands:
      - cd build
      - apt update && apt install lcov -y
      - lcov --gcov-tool /home/riscv/bin/riscv64-unknown-linux-gnu-gcov --capture --directory . --output-file $${DRONE_REPO_NAME}.info
      - genhtml --branch-coverage -o ../codecov $${DRONE_REPO_NAME}.info 
  - name: scp files
    image: appleboy/drone-scp
    settings:
      host: conleylee.com
      username:
        from_secret: download_host_user
      password: 
        from_secret: download_host_passwd
      port: 38000
      target: /home/lee/codecov/${DRONE_REPO_NAME}/${DRONE_BUILD_NUMBER}/${DRONE_COMMIT_SHA}
      strip_components: 1
      source: codecov/*
  - name: upload_to_codecov 
    image: robertstettner/drone-codecov:latest 
    settings:
      token:
        from_secret: CODECOV_TOKEN
      files: 
        - build/${DRONE_REPO_NAME}.info
      flags:
        - model_test
  - name: notify
    image: ubuntu20.04:drone_script 
    environment:
      MATTERMOST_TOKEN:
        from_secret: MATTERMOST_TOKEN
      GITEA_API_TOKEN:
        from_secret: gitea_api_token
    commands:
      - 'export DRONE_SCRIPT_DOWNLOAD_LINK=https://download.conleylee.com/scripts/drone_bot.py'
      - 'export DRONE_CODECOV_LINK=https://codecov.conleylee.com/$${DRONE_REPO_NAME}/$${DRONE_BUILD_NUMBER}/$${DRONE_COMMIT_SHA}'
      - 'wget $${DRONE_SCRIPT_DOWNLOAD_LINK}'
      - pip3 install mattermostdriver
      - python3 `basename $${DRONE_SCRIPT_DOWNLOAD_LINK}` 
    when:
      status: [success, failure]
